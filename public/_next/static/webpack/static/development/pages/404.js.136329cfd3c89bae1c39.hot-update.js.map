{"version":3,"file":"static/webpack/static/development/pages/404.js.136329cfd3c89bae1c39.hot-update.js","sources":["webpack:///./pages/apiComponents/functionContextJson.js"],"sourcesContent":["import Link from 'next/link'\nimport Router from 'next/router'\nimport headerlink from '../api/headerlink.json'\nimport indexHelloNextJs from '../api/indexHelloNextJs.json'\nimport park from '../api/parkAPI.json'\nimport headingH1Json from '../api/headingH1.json'\nimport { wordCapitalize } from '../../styles/utilStyle.js'\nimport utilStyles from '../../styles/utils.module.css'\nimport { Row, Col } from 'react-bootstrap'\n\n// 把所有使用內部json的function放在這邊，這樣要重複使用呼叫不用作多餘的事情\n// 但是如果是使用getStaticProps or getInitialProps or getServerSideProps or getStaticPath則無法如此使用\n\n// API_URL為.env這個檔案中的網址來使用，普通使用的畫沒有影響，但是如果要使用image這種api匯入的話，就需要指定API_URL\nexport const { API_URL } = process.env\n\nexport const getHeader = () => {\n  return headerlink\n}\n\n// 使用function作爲api承接內容，在上方的return中map接到的值\nexport const getIndexHelloNextJs = () => {\n  return indexHelloNextJs\n}\n\nexport const getPark = () => {\n  return park\n}\n\nexport const getheadingH1 = () => {\n  return headingH1Json\n}\n\nexport const h1Mapping = (h1_id, arr_id) => {\n  // 這邊要特別注意，使用function進行return中render內容，如果內容包含其它function.map\n  // 需要被包含在<></>裡面，否則會被報錯顯示declare\n  return (\n    <>\n      {\n        !getheadingH1() ? 'Loading ...' :\n        getheadingH1().map(headingH1 => (\n          <h1 className={\n              !(headingH1.h1_id == h1_id && headingH1.arr[0].arr_id == arr_id) ? utilStyles.h1.hidden :\n              !(h1_id == 1 && arr_id == 1) ? utilStyles.headingH1 : utilStyles.divH1\n            }\n            key={headingH1.h1_id}>\n            {!(headingH1.h1_id == h1_id && headingH1.arr[0].arr_id == arr_id) ?\n              null : headingH1.h1}\n          </h1>\n        ))\n      }\n    </>\n  )\n}\n\n// for Header.js\nexport const handler = () => {\n  Router.push({\n    pathname: '/',\n    query: {\n      name: 'Home',\n      title: 'Connect to Home Page',\n    },\n  })\n}\n\n// 當作額外插入的link來使用，這裡面的post.id，post.title都是藉由被map進來的post值使用\nexport const PostLink = ({ post }) => {\n  return (\n    <>\n      <Link href=\"/batman/[id]\" as={`/batman/${post.id}`}>\n        <a title={`Connect to ${post.title} Page`}>{post.title}</a>\n      </Link>\n    </>\n  )\n}\n\nexport const pageDescription = () => {\n  return (\n    `This is the page for the website.This content to description this text website how to use.`\n  )\n}\n\nexport const titleDescription = () => {\n  return (\n    `The website is built by upfloor which is a work that train myself to be up floor.`\n  )\n}\n\nexport const footerDescription = () => {\n  return (\n    <Row>\n      <Col className='d-none d-sm-block' sm={12} md={12} lg={12} xl={12}>\n        {\n          // 判斷式先判斷webDescription()能不能執行，如果不能那麼顯示Loading ... ， 可以的話執行webDescription()\n          !webDescription() ? 'Loading ...' : webDescription()\n        }\n      </Col>\n      <Col xs={12} sm={12} md={12} lg={12} xl={12}>\n        {\n          !copyRight() ? 'Loading ...' : copyRight()\n        }\n      </Col>\n    </Row>\n  )\n}\n\nexport const webDescription = () => {\n  return (\n    `Upfloor make nextjs (๑•ี_เ•ี๑)`\n  )\n}\n\nexport const copyRight = () => {\n  return (\n    `Copyright © 2019-2020 Upfloor`\n  )\n}\n\n// 由list接入內容，這樣在return中才能使用\nexport const getRandom = ( list ) => {\n  // Math.floor函式會回傳小於等於所給數字的最大整數。\n  // console.log(Math.floor(45.95)) => 45\n  // console.log(Math.floor(-8.77)) => -9\n  return (\n    list[ Math.floor( Math.random() * list.length ) ]\n  )\n}\n\nexport const headerBar = () => {\n  const randomText = [ 'NextJs', 'Bootstrap', 'ReactJs', 'JS' ]\n  const randomWriter = [ 'Upfloor', 'StudioP', 'Learning', 'Frontend' ]\n\n  return (\n    getRandom(randomText) + ' with ' + getRandom(randomWriter)\n  )\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAIA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAaA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAOA;AACA;AAEA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;AACA;AAGA;AAEA;AACA;AAGA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AAGA;AAEA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AAEA;AAGA;;;;A","sourceRoot":""}