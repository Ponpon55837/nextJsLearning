{"version":3,"file":"static/webpack/static/development/pages/batman.js.02c76f44ea5179862635.hot-update.js","sources":["webpack:///./pages/apiComponents/functionContextJson.js"],"sourcesContent":["import Link from 'next/link'\nimport Router from 'next/router'\nimport headerlink from '../api/headerlink.json'\nimport indexHelloNextJs from '../api/indexHelloNextJs.json'\nimport park from '../api/parkAPI.json'\nimport { wordCapitalize } from '../../styles/utilStyle.js'\nimport { Row, Col } from 'react-bootstrap'\n\n// 把所有使用內部json的function放在這邊，這樣要重複使用呼叫不用作多餘的事情\n// 但是如果是使用getStaticProps or getInitialProps or getServerSideProps or getStaticPath則無法如此使用\n\n// API_URL為.env這個檔案中的網址來使用，普通使用的畫沒有影響，但是如果要使用image這種api匯入的話，就需要指定API_URL\nexport const { API_URL } = process.env\n\nexport const getHeader = () => {\n  return headerlink\n}\n\n// 使用function作爲api承接內容，在上方的return中map接到的值\nexport const getIndexHelloNextJs = () => {\n  return indexHelloNextJs\n}\n\nexport const getPark = () => {\n  return park\n}\n\n// for Header.js\nexport const handler = () => {\n  Router.push({\n    pathname: '/',\n    query: {\n      name: 'Home',\n      title: 'Connect to Home Page',\n    },\n  })\n}\n\n// 當作額外插入的link來使用，這裡面的post.id，post.title都是藉由被map進來的post值使用\nexport const PostLink = ({ post }) => (\n  <Link href=\"/batman/[id]\" as={`/batman/${post.id}`}>\n    <a title={`Connect to ${post.title} Page`}>{post.title}</a>\n  </Link>\n)\n\nexport const pageDescription = ( pageDes ) => {\n  return pageDes = 'This is the page for the website.This content to description this text website how to use.'\n}\n\nexport const titleDescription = ( titleDes ) => {\n  return titleDes = 'The website is built by upfloor which is a work that train myself to be up floor.'\n}\n\nexport const footerDescription = ( footerDes ) => {\n  return (\n    <Row>\n      <Col xs={0} sm={0} md={1} lg={1} xl={2}></Col>\n      <Col xs={6} sm={6} md={5} lg={5} xl={4}>{ !webDescription() ? 'Loading ...' : webDescription() }</Col>\n      <Col xs={6} sm={6} md={5} lg={5} xl={4}>{ !copyRight() ? 'Loafing ...' : copyRight() }</Col>\n      <Col xs={0} sm={0} md={1} lg={1} xl={2}></Col>\n    </Row>\n  )\n}\n\nexport const webDescription = ( webDes ) => {\n  return webDes = `Upfloor make nextjs (๑•ี_เ•ี๑)`\n}\n\nexport const copyRight = ( copyDes ) => {\n  return copyDes = `Copyright © 2019-2020 Upfloor`\n}\n\nexport const headerBar = ( headBar ) => {\n  const randomText = [ 'NextJS', 'Bootstrap', 'ReactJs', 'Framework' ]\n  const randomWriter = [ 'Upfloor', 'StudioP', 'GameStart' ]\n  return headBar = randomText[Math.floor(Math.random() * randomText.length)] + ' with ' + randomWriter[Math.floor(Math.random() * randomWriter.length)]\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAOA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAMA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}