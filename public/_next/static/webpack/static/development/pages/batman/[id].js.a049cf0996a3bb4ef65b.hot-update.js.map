{"version":3,"file":"static/webpack/static/development/pages/batman/[id].js.a049cf0996a3bb4ef65b.hot-update.js","sources":["webpack:///./pages/batman/.js"],"sourcesContent":["import { useRouter } from 'next/router'\n// 用來顯示 `` 中的內容，使用markdown的css標籤來做為外觀調整\nimport Markdown from 'react-markdown'\nimport Layout from '../../components/MyLayout'\n// bootstrap\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Card from 'react-bootstrap/Card'\n\nconst cardHeader = {\n  background: 'linear-gradient(to bottom right, #f8f0a9 0%, #fbf1f8 100%)'\n}\n\nconst IdPost = () => {\n  const router = useRouter()\n  return (\n    <Layout>\n      <Container>\n        <Row>\n          <Col xs={0} sm={0} md={1} lg={2} xl={2}>\n          </Col>\n          <Col xs={12} sm={12} md={10} lg={8} xl={8}>\n            <Card border=\"primary\" style={{ width: 'auto' }}>\n              <Card.Header style={cardHeader}><h1>{router.query.id}</h1></Card.Header>\n              <Card.Body>\n                <Card.Text className=\"markdown\">\n                  <Markdown\n                    source={`This is our blog post.Yes. We can have a [link](/link).And we can have a title as well.### This is a title And here's the content.`}\n                  />\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col xs={0} sm={0} md={1} lg={2} xl={2}></Col>\n        </Row>\n      </Container>\n      <style jsx global>\n        {`\n          .markdown {\n            font-family: 'Arial';\n          }\n\n          .markdown a {\n            text-decoration: none;\n            color: blue;\n          }\n\n          .markdown a:hover {\n            opacity: 0.6;\n          }\n\n          .markdown h3 {\n            margin: 0;\n            padding: 0;\n            text-transform: uppercase;\n          }\n        `}\n      </style>\n    </Layout>\n  )\n}\nexport default IdPost\n\n// import Layout from '../../components/MyLayout'\n// import fetch from 'isomorphic-unfetch'\n//\n// // 這裡props作爲接收api內容的銜接變數\n// const Post = (props) => {\n//   return (\n//     <Layout>\n//       <h1>{props.show.name}</h1>\n//       <p>{props.show.summary.replace(/<[/]?[pb]>/g, '')}</p>\n//       {props.show.image ? <img src={props.show.image.medium} /> : null}\n//     </Layout>\n//   )\n// }\n//\n// // 藉由fetch來抓取api中對應的id頁面並將值接入\n// Post.getInitialProps = async function(context) {\n//   // 解構id這個變數為context接到的全部內容底下的query值\n//   const { id } = context.query\n//   const res = await fetch(`https://api.tvmaze.com/shows/${id}`)\n//   const show = await res.json()\n//\n//   console.log(`Fetched show: ${show.name}`)\n//\n//   return { show }\n// }\n//\n// export default Post\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAjBA;AAAA;AAAA;AA4CA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}